//apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'idea'

//mainClassName='spix.Test'
//mainClassName='spix.blackboard.BlackboardTest'
//mainClassName='spix.type.TypeRegistryTest'
mainClassName='spix.core.SpixTest'

// I want to compile groovy and Java together instead of in two passes
//sourceSets.main.java.srcDirs = []
//sourceSets.main.groovy.srcDirs += ["src/main/java"]

sourceSets {
  main {
    java { srcDirs = [] }    // no source dirs for the java compiler
    groovy { srcDirs = ["src/main/java"] }  // compile   everything in src/ with groovy
  }
}

/*
compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}
compileGroovy {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}
Whoah... wait to enable those until we won't be fixing code that will
just get deleted.
*/

repositories {
    mavenLocal()
    jcenter()
}

ext.jmeVersion = "[3.1,)" 
//ext.jmeVersion = "unknown" 

dependencies {

    compile 'org.codehaus.groovy:groovy-all:2.4.4'
     
    compile 'com.google.guava:guava:19.0'
    
    compile "org.jmonkeyengine:jme3-core:$jmeVersion"

    // So we can run a test app
    compile "org.jmonkeyengine:jme3-core:$jmeVersion"
    compile "org.jmonkeyengine:jme3-desktop:$jmeVersion"
    compile "org.jmonkeyengine:jme3-lwjgl:$jmeVersion"
           
    compile "com.github.insubstantial:substance:[7.3,)"
    
    compile 'org.slf4j:slf4j-api:1.7.13'
    
}

task runTestApp(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "spix.app.TestApp"
}

task runTestLaf(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "spix.app.TestLaf"
}


